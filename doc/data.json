{
    "project": {},
    "files": {
        "../src/rendeer.js": {
            "name": "../src/rendeer.js",
            "modules": {},
            "classes": {
                "RD..": 1,
                "RD.SceneNode": 1,
                "RD.Sprite": 1,
                "RD.Billboard": 1,
                "RD.PointCloud": 1,
                "RD.ParticlesEmissor": 1,
                "RD.Scene": 1,
                "RD.Renderer": 1,
                "RD.Camera": 1
            },
            "fors": {},
            "namespaces": {
                "RD": 1
            }
        }
    },
    "modules": {},
    "classes": {
        "RD..": {
            "name": "RD..",
            "shortname": ".",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "RD",
            "file": "../src/rendeer.js",
            "line": 12,
            "description": "the global namespace, access it using RD."
        },
        "RD.SceneNode": {
            "name": "RD.SceneNode",
            "shortname": "SceneNode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "RD",
            "file": "../src/rendeer.js",
            "line": 76,
            "description": "SceneNode class to hold an scene item",
            "is_constructor": 1
        },
        "RD.Sprite": {
            "name": "RD.Sprite",
            "shortname": "Sprite",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "RD",
            "file": "../src/rendeer.js",
            "line": 858,
            "description": "Sprite class , inherits from SceneNode but helps to render 2D planes (in 3D Space)",
            "is_constructor": 1
        },
        "RD.Billboard": {
            "name": "RD.Billboard",
            "shortname": "Billboard",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "RD",
            "file": "../src/rendeer.js",
            "line": 995,
            "description": "Billboard class to hold an scene item, used for camera aligned objects",
            "is_constructor": 1
        },
        "RD.PointCloud": {
            "name": "RD.PointCloud",
            "shortname": "PointCloud",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "RD",
            "file": "../src/rendeer.js",
            "line": 1070,
            "description": "PointCloud renders an array of points",
            "is_constructor": 1
        },
        "RD.ParticlesEmissor": {
            "name": "RD.ParticlesEmissor",
            "shortname": "ParticlesEmissor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "RD",
            "file": "../src/rendeer.js",
            "line": 1224,
            "description": "ParticlesEmissor renders points and animate them as particles",
            "is_constructor": 1
        },
        "RD.Scene": {
            "name": "RD.Scene",
            "shortname": "Scene",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "RD",
            "file": "../src/rendeer.js",
            "line": 1435,
            "description": "Scene holds the full scene graph, use root to access the root child",
            "is_constructor": 1
        },
        "RD.Renderer": {
            "name": "RD.Renderer",
            "shortname": "Renderer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "RD",
            "file": "../src/rendeer.js",
            "line": 1495,
            "description": "Renderer in charge of rendering a Scene",
            "is_constructor": 1
        },
        "RD.Camera": {
            "name": "RD.Camera",
            "shortname": "Camera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "RD",
            "file": "../src/rendeer.js",
            "line": 2167,
            "description": "Camera wraps all the info about the camera (properties and view and projection matrices)",
            "is_constructor": 1
        }
    },
    "classitems": [
        {
            "file": "../src/rendeer.js",
            "line": 7,
            "description": "Main namespace",
            "class": "RD..",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 17,
            "itemtype": "property",
            "name": "ZERO",
            "type": "Vec3",
            "default": "[0,0,0]",
            "class": "RD..",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 22,
            "itemtype": "property",
            "name": "ONE",
            "type": "Vec3",
            "default": "[1,1,1]",
            "class": "RD..",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 27,
            "itemtype": "property",
            "name": "BLACK",
            "type": "Vec3",
            "default": "[0,0,0]",
            "class": "RD..",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 32,
            "itemtype": "property",
            "name": "WHITE",
            "type": "Vec3",
            "default": "[1,1,1]",
            "class": "RD..",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 159,
            "description": "A unique identifier, useful to retrieve nodes by name",
            "itemtype": "property",
            "name": "id",
            "type": "String",
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 174,
            "description": "the name of the shader in the shaders manager",
            "itemtype": "property",
            "name": "shader",
            "type": "String",
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 180,
            "description": "The position relative to its parent",
            "itemtype": "property",
            "name": "uniforms",
            "type": "Vec3",
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 194,
            "description": "The position relative to its parent in vec3 format",
            "itemtype": "property",
            "name": "position",
            "type": "Vec3",
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 204,
            "description": "The orientation relative to its parent in quaternion format",
            "itemtype": "property",
            "name": "rotation",
            "type": "Quat",
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 215,
            "description": "The scaling relative to its parent in vec3 format (default is [1,1,1])",
            "itemtype": "property",
            "name": "scaling",
            "type": "Vec3",
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 231,
            "description": "The color in RGBA format",
            "itemtype": "property",
            "name": "color",
            "type": "Vec4",
            "default": "[1,1,1,1]",
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 242,
            "description": "This number is the 4ï¿½ component of color but can be accessed directly",
            "itemtype": "property",
            "name": "opacity",
            "type": "Number",
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 252,
            "description": "The scene where this node is attached",
            "itemtype": "property",
            "name": "scene",
            "type": "Scene",
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 263,
            "description": "The parent node where this node is attached",
            "itemtype": "property",
            "name": "parentNode",
            "type": "SceneNode",
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 274,
            "description": "Attach node to its children list",
            "itemtype": "method",
            "name": "addChild",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "RD.SceneNode"
                }
            ],
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 300,
            "description": "Remove a node from its children list",
            "itemtype": "method",
            "name": "removeChild",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "SceneNode"
                }
            ],
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 331,
            "description": "Change the order inside the children, useful when rendering without Depth Test",
            "itemtype": "method",
            "name": "setChildIndex",
            "params": [
                {
                    "name": "child",
                    "description": "",
                    "type": "RD.SceneNode"
                },
                {
                    "name": "index",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 346,
            "description": "Recursively retrieves all children nodes (this doesnt include itself)",
            "itemtype": "method",
            "name": "getAllChildren",
            "params": [
                {
                    "name": "result",
                    "description": "[Optional] you can specify an array where all the children will be pushed",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "all the children nodes",
                "type": "Array"
            },
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 366,
            "description": "Recursively retrieves all children nodes taking into account visibility (flags.visible)",
            "itemtype": "method",
            "name": "getVisibleChildren",
            "params": [
                {
                    "name": "result",
                    "description": "[Optional] you can specify an array where all the children will be pushed",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "all the children nodes",
                "type": "Array"
            },
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 389,
            "description": "Returns an object that represents the current state of this object an its children",
            "itemtype": "method",
            "name": "serialize",
            "return": {
                "description": "object",
                "type": "Object"
            },
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 412,
            "description": "Configure this SceneNode to a state from an object (used with serialize)",
            "itemtype": "method",
            "name": "configure",
            "params": [
                {
                    "name": "o",
                    "description": "object with the state of a SceneNode",
                    "type": "Object"
                }
            ],
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 430,
            "description": "sets the name of the mesh to be used to render the object",
            "itemtype": "method",
            "name": "setMesh",
            "params": [
                {
                    "name": "mesh_name",
                    "description": "also it accepts a mesh itself",
                    "type": "String|Mesh"
                }
            ],
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 445,
            "description": "Sets the name of the mesh to be used to render the object",
            "itemtype": "method",
            "name": "setTexture",
            "params": [
                {
                    "name": "channel",
                    "description": "which channel to use (the texture will be uploaded to the shader with the name \"u_\" + channel + \"_texture\"",
                    "type": "String"
                },
                {
                    "name": "texture",
                    "description": "texture name (textures are retrieved from the renderer.textures",
                    "type": "String"
                }
            ],
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 459,
            "description": "name of texture to use in the color channel (the same as SetTexture(\"color\", name ))",
            "itemtype": "property",
            "name": "texture",
            "type": "String",
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 469,
            "description": "clears position, rotation and scale",
            "itemtype": "method",
            "name": "resetTransform",
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 481,
            "description": "Translate object in local space",
            "itemtype": "method",
            "name": "translate",
            "params": [
                {
                    "name": "delta",
                    "description": "",
                    "type": "Vec3"
                }
            ],
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 492,
            "description": "Rotate object (supports local or global but doesnt takes into account parent)",
            "itemtype": "method",
            "name": "rotate",
            "params": [
                {
                    "name": "angle_in_rad",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "axis",
                    "description": "",
                    "type": "Vec3"
                },
                {
                    "name": "in_local",
                    "description": "specify if the axis is in local space or global space",
                    "type": "Boolean"
                }
            ],
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 510,
            "description": "Scale object",
            "itemtype": "method",
            "name": "scale",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vec3"
                }
            ],
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 527,
            "description": "Set the pivot point, 0,0,0 by default (WARNING: use flags.pivot = true  to enable the use of the pivot)",
            "itemtype": "method",
            "name": "setPivot",
            "params": [
                {
                    "name": "pivot",
                    "description": "local coordinate of the pivot point",
                    "type": "Vec3"
                }
            ],
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 547,
            "description": "Get transform local matrix",
            "itemtype": "method",
            "name": "getLocalMatrix",
            "return": {
                "description": "matrix44",
                "type": "Mat4"
            },
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 559,
            "description": "Get transform global matrix (concatenating parents) (its a reference)",
            "itemtype": "method",
            "name": "getGlobalMatrix",
            "return": {
                "description": "matrix44",
                "type": "Mat4"
            },
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 570,
            "description": "Get global rotation (concatenating parent rotations)",
            "itemtype": "method",
            "name": "getGlobalRotation",
            "params": [
                {
                    "name": "result",
                    "description": "[Optional] quaternion to store the result",
                    "type": "Quat"
                }
            ],
            "return": {
                "description": "resulting rotation in quaternion format",
                "type": "Quat"
            },
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 592,
            "description": "recomputes _local_matrix according to position, rotation and scaling",
            "itemtype": "method",
            "name": "updateLocalMatrix",
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 633,
            "description": "recomputes _global_matrix according to position, rotation and scaling",
            "itemtype": "method",
            "name": "updateGlobalMatrix",
            "params": [
                {
                    "name": "fast",
                    "description": "skips recomputation of parent, use it only if you are sure its already updated",
                    "type": "Boolean"
                },
                {
                    "name": "update_childs",
                    "description": "update global matrix in childs too",
                    "type": "Boolean"
                }
            ],
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 666,
            "description": "recompute local and global matrix",
            "itemtype": "method",
            "name": "updateMatrices",
            "params": [
                {
                    "name": "fast",
                    "description": "uses the global matrix as it is in the parent node instead of crawling all the ierarchy",
                    "type": "Bool"
                }
            ],
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 677,
            "description": "updates position, rotation and scale from the matrix",
            "itemtype": "method",
            "name": "fromMatrix",
            "params": [
                {
                    "name": "m",
                    "description": "the matrix",
                    "type": "Mat4"
                },
                {
                    "name": "is_global",
                    "description": "optional, if the matrix is in global or local space",
                    "type": "Bool"
                }
            ],
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 723,
            "description": "Returns a point multiplied by the local matrix",
            "itemtype": "method",
            "name": "getLocalPoint",
            "params": [
                {
                    "name": "v",
                    "description": "the point",
                    "type": "Vec3"
                },
                {
                    "name": "result",
                    "description": "optional, where to store the output",
                    "type": "Vec3"
                }
            ],
            "return": {
                "description": "result",
                "type": "Vec3"
            },
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 738,
            "description": "Returns a point rotated by the local rotation",
            "itemtype": "method",
            "name": "getLocalVector",
            "params": [
                {
                    "name": "v",
                    "description": "the point",
                    "type": "Vec3"
                },
                {
                    "name": "result",
                    "description": "optional, where to store the output",
                    "type": "Vec3"
                }
            ],
            "return": {
                "description": "result",
                "type": "Vec3"
            },
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 751,
            "description": "Returns the node position in global coordinates",
            "itemtype": "method",
            "name": "getGlobalPosition",
            "params": [
                {
                    "name": "result",
                    "description": "optional, where to store the output",
                    "type": "Vec3"
                }
            ],
            "return": {
                "description": "result",
                "type": "Vec3"
            },
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 764,
            "description": "Returns a point multiplied by the global matrix",
            "itemtype": "method",
            "name": "getGlobalPoint",
            "params": [
                {
                    "name": "v",
                    "description": "the point",
                    "type": "Vec3"
                },
                {
                    "name": "result",
                    "description": "optional, where to store the output",
                    "type": "Vec3"
                }
            ],
            "return": {
                "description": "result",
                "type": "Vec3"
            },
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 778,
            "description": "Returns a point rotated by the global matrix",
            "itemtype": "method",
            "name": "getGlobalVector",
            "params": [
                {
                    "name": "v",
                    "description": "the point",
                    "type": "Vec3"
                },
                {
                    "name": "result",
                    "description": "optional, where to store the output",
                    "type": "Vec3"
                }
            ],
            "return": {
                "description": "result",
                "type": "Vec3"
            },
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 792,
            "description": "Returns the distance between the center of the node and the position in global coordinates",
            "itemtype": "method",
            "name": "getDistanceTo",
            "params": [
                {
                    "name": "position",
                    "description": "the point",
                    "type": "Vec3"
                }
            ],
            "return": {
                "description": "result",
                "type": "Number"
            },
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 805,
            "description": "Searchs the node and returns the first child node with the matching id, it is a recursive search so it is slow",
            "itemtype": "method",
            "name": "findNode",
            "params": [
                {
                    "name": "id",
                    "description": "the id of the node",
                    "type": "String"
                }
            ],
            "return": {
                "description": "result node otherwise null",
                "type": "SceneNode"
            },
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 825,
            "description": "calls a function in child nodes",
            "itemtype": "method",
            "name": "propagate",
            "params": [
                {
                    "name": "method",
                    "description": "name",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "array containing the params",
                    "type": "Array"
                }
            ],
            "class": "RD.SceneNode",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 1452,
            "description": "clears all nodes inside",
            "itemtype": "method",
            "name": "clear",
            "class": "RD.Scene",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 1463,
            "description": "returns gets node by id",
            "itemtype": "method",
            "name": "getNodeById",
            "class": "RD.Scene",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 1473,
            "description": "propagate update method",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "dt",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "RD.Scene",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 1484,
            "description": "The root node",
            "itemtype": "property",
            "name": "root",
            "type": "RD.SceneNode",
            "class": "RD.Scene",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 1552,
            "description": "whats the data folder where all data should be fetch",
            "itemtype": "method",
            "name": "setDataFolder",
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "RD.Renderer",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 1571,
            "description": "clear color and depth buffer",
            "itemtype": "method",
            "name": "clear",
            "params": [
                {
                    "name": "color",
                    "description": "clear color",
                    "type": "Vec4"
                }
            ],
            "class": "RD.Renderer",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 1585,
            "description": "renders once scene from one camera",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "scene",
                    "description": "",
                    "type": "RD.Scene"
                },
                {
                    "name": "camera",
                    "description": "",
                    "type": "RD.Camera"
                },
                {
                    "name": "nodes",
                    "description": "[Optional] array with nodes to render, otherwise all nodes will be rendered",
                    "type": "Array"
                }
            ],
            "class": "RD.Renderer",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 1820,
            "description": "Loads one mesh and stores inside the meshes object to be reused in the future, if it is already loaded it skips the loading",
            "itemtype": "method",
            "name": "loadMesh",
            "params": [
                {
                    "name": "name",
                    "description": "name (and url) of the mesh",
                    "type": "String"
                },
                {
                    "name": "on_complete",
                    "description": "callback",
                    "type": "Function"
                }
            ],
            "class": "RD.Renderer",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 1863,
            "description": "Loads one texture and stores inside the textures object to be reused in the future, if it is already loaded it skips the loading",
            "itemtype": "method",
            "name": "loadTexture",
            "params": [
                {
                    "name": "name",
                    "description": "name (and url) of the texture",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "texture options as in litegl (option.name is used to store it with a different name)",
                    "type": "Object"
                },
                {
                    "name": "on_complete",
                    "description": "callback",
                    "type": "Function"
                }
            ],
            "class": "RD.Renderer",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 1952,
            "description": "Loads a shaders file in the Atlas file format (check GL.loadFileAtlas in litegl)",
            "itemtype": "method",
            "name": "loadShaders",
            "params": [
                {
                    "name": "url",
                    "description": "url to text file containing all the shader files",
                    "type": "String"
                },
                {
                    "name": "on_complete",
                    "description": "callback",
                    "type": "Function"
                }
            ],
            "class": "RD.Renderer",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 2125,
            "description": "container with all the registered meshes (same as gl.meshes)",
            "itemtype": "property",
            "name": "meshes",
            "type": "Object",
            "class": "RD.Renderer",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 2135,
            "description": "container with all the registered textures (same as gl.textures)",
            "itemtype": "property",
            "name": "textures",
            "type": "Object",
            "class": "RD.Renderer",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 2145,
            "description": "container with all the registered shaders (same as gl.shaders)",
            "itemtype": "property",
            "name": "shaders",
            "type": "Object",
            "class": "RD.Renderer",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 2174,
            "description": "the camera type, RD.Camera.PERSPECTIVE || RD.Camera.ORTHOGRAPHIC",
            "itemtype": "property",
            "name": "type",
            "type": "Number",
            "default": "RD.Camera.PERSPECTIVE",
            "class": "RD.Camera",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 2185,
            "description": "near distance",
            "itemtype": "property",
            "name": "near",
            "type": "Number",
            "default": "0.1",
            "class": "RD.Camera",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 2191,
            "description": "far distance",
            "itemtype": "property",
            "name": "far",
            "type": "Number",
            "default": "10000",
            "class": "RD.Camera",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 2197,
            "description": "aspect (width / height)",
            "itemtype": "property",
            "name": "aspect",
            "type": "Number",
            "default": "1",
            "class": "RD.Camera",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 2203,
            "description": "fov angle in degrees",
            "itemtype": "property",
            "name": "fov",
            "type": "Number",
            "default": "45",
            "class": "RD.Camera",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 2209,
            "description": "size of frustrum when working in orthographic",
            "itemtype": "property",
            "name": "frustum_size",
            "type": "Number",
            "default": "50",
            "class": "RD.Camera",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 2248,
            "description": "Position where the camera eye is located",
            "itemtype": "property",
            "name": "position",
            "type": "Vec3",
            "class": "RD.Camera",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 2258,
            "description": "Where the camera is looking at, the center of where is looking",
            "itemtype": "property",
            "name": "target",
            "type": "Vec3",
            "class": "RD.Camera",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 2268,
            "description": "Up vector",
            "itemtype": "property",
            "name": "up",
            "type": "Vec3",
            "default": "[0,1,0]",
            "class": "RD.Camera",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 2279,
            "description": "changes the camera to perspective mode",
            "itemtype": "method",
            "name": "perspective",
            "params": [
                {
                    "name": "fov",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "aspect",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "near",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "far",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "RD.Camera",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 2298,
            "description": "changes the camera to orthographic mode (frustumsize is top-down)",
            "itemtype": "method",
            "name": "orthographic",
            "params": [
                {
                    "name": "frustum_size",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "near",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "far",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "aspect",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "RD.Camera",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 2315,
            "description": "configure view of the camera",
            "itemtype": "method",
            "name": "lookAt",
            "params": [
                {
                    "name": "position",
                    "description": "",
                    "type": "Vec3"
                },
                {
                    "name": "target",
                    "description": "",
                    "type": "Vec3"
                },
                {
                    "name": "up",
                    "description": "",
                    "type": "Vec3"
                }
            ],
            "class": "RD.Camera",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 2331,
            "description": "update view projection matrices",
            "itemtype": "method",
            "name": "updateMatrices",
            "class": "RD.Camera",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 2366,
            "description": "update camera using a model as reference",
            "itemtype": "method",
            "name": "updateMatrices",
            "params": [
                {
                    "name": "model",
                    "description": "",
                    "type": "Mat4"
                }
            ],
            "class": "RD.Camera",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 2380,
            "description": "transform vector (only rotates) from local to global",
            "itemtype": "method",
            "name": "getLocalVector",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vec3"
                },
                {
                    "name": "result",
                    "description": "[Optional]",
                    "type": "Vec3"
                }
            ],
            "return": {
                "description": "local point transformed",
                "type": "Vec3"
            },
            "class": "RD.Camera",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 2395,
            "description": "transform point from local to global",
            "itemtype": "method",
            "name": "getLocalVector",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vec3"
                },
                {
                    "name": "result",
                    "description": "[Optional]",
                    "type": "Vec3"
                }
            ],
            "return": {
                "description": "local point transformed",
                "type": "Vec3"
            },
            "class": "RD.Camera",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 2410,
            "description": "gets the front vector normalized",
            "itemtype": "method",
            "name": "getFront",
            "params": [
                {
                    "name": "dest",
                    "description": "[Optional]",
                    "type": "Vec3"
                }
            ],
            "return": {
                "description": "front vector",
                "type": "Vec3"
            },
            "class": "RD.Camera",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 2467,
            "description": "projects a point from 3D to 2D",
            "itemtype": "method",
            "name": "project",
            "params": [
                {
                    "name": "vec",
                    "description": "",
                    "type": "Vec3"
                },
                {
                    "name": "viewport",
                    "description": "",
                    "type": "Array",
                    "optional": true,
                    "optdefault": "gl.viewport"
                },
                {
                    "name": "result",
                    "description": "",
                    "type": "Vec3",
                    "optional": true,
                    "optdefault": "vec3"
                }
            ],
            "return": {
                "description": "the projected point",
                "type": "Vec3"
            },
            "class": "RD.Camera",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 2489,
            "description": "projects a point from 2D to 3D",
            "itemtype": "method",
            "name": "unproject",
            "params": [
                {
                    "name": "vec",
                    "description": "",
                    "type": "Vec3"
                },
                {
                    "name": "viewport",
                    "description": "",
                    "type": "Array",
                    "optional": true,
                    "optdefault": "gl.viewport"
                },
                {
                    "name": "result",
                    "description": "",
                    "type": "Vec3",
                    "optional": true,
                    "optdefault": "vec3"
                }
            ],
            "return": {
                "description": "the projected point",
                "type": "Vec3"
            },
            "class": "RD.Camera",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 2503,
            "description": "given a screen coordinate it cast a ray and returns the collision point with a given plane",
            "itemtype": "method",
            "name": "getRayPlaneCollision",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "position",
                    "description": "Plane point",
                    "type": "Vec3"
                },
                {
                    "name": "normal",
                    "description": "Plane normal",
                    "type": "Vec3"
                },
                {
                    "name": "result",
                    "description": "",
                    "type": "Vec3",
                    "optional": true,
                    "optdefault": "vec3"
                }
            ],
            "return": {
                "description": "the collision point, or null",
                "type": "Vec3"
            },
            "class": "RD.Camera",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 2572,
            "description": "test if box is inside frustrum (you must call camera.extractPlanes() previously to update frustrum planes)",
            "itemtype": "method",
            "name": "testBox",
            "params": [
                {
                    "name": "box",
                    "description": "in {center:vec3,halfsize:vec3}",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "CLIP_OUTSIDE or CLIP_INSIDE or CLIP_OVERLAP",
                "type": "Number"
            },
            "class": "RD.Camera",
            "namespace": "RD"
        },
        {
            "file": "../src/rendeer.js",
            "line": 2602,
            "description": "test if sphere is inside frustrum (you must call camera.extractPlanes() previously to update frustrum planes)",
            "itemtype": "method",
            "name": "testSphere",
            "params": [
                {
                    "name": "center",
                    "description": "",
                    "type": "Vec3"
                },
                {
                    "name": "radius",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "CLIP_OUTSIDE or CLIP_INSIDE or CLIP_OVERLAP",
                "type": "Number"
            },
            "class": "RD.Camera",
            "namespace": "RD"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\nMain namespace",
            "line": " ../src/rendeer.js:7"
        }
    ]
}